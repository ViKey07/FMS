{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'LOGIN_USER_KEY';\nvar baseURL;\n// if (\n//   process.env.REACT_APP_ENVIRONMENT &&\n//   process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n// ) {\n//   baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else\nbaseURL = \"https://backend-eric.herokuapp.com/\";\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  if (localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.signUp = async (user_name, email, password) => {\n      const savedPost = await api.post('/users/signup/', {\n        user_name: user_name,\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.signIn = async (email, password) => {\n      const savedPost = await api.post('/users/signin/', {\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.getUsers = async () => {\n      const posts = await api.get('/users/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n    this.getItems = async () => {\n      let url = '/items/';\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n    this.getCarts = async () => {\n      const carts = await api.get('/carts/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return carts;\n    };\n    this.addCarts = async item_id => {\n      const savedCart = await api.post('/carts/add/', {\n        item: item_id,\n        quantity: 1\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n    this.updateCarts = async (cart_id, quantity) => {\n      const savedCart = await api.put('/carts/update/' + cart_id + '/', {\n        quantity: quantity\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n    this.deleteCarts = async cart_id => {\n      const response = await api.delete('/carts/delete/' + cart_id + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n    this.orderAdd = async function () {\n      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      const order = await api.post('/orders/add/', params).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return order;\n    };\n    this.getPosts = async () => {\n      const posts = await api.get('/posts/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('body', body);\n      formData.append('image', image);\n      const savedPost = await api.post('/posts/add/', formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.deletePost = async id => {\n      const response = await api.delete('/posts/delete/' + id + '/').then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n  }\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","localStorage","getItem","common","JSON","parse","token","err","console","error","API","signUp","user_name","email","password","savedPost","post","then","response","data","catch","Error","signIn","getUsers","posts","get","getItems","url","items","getCarts","carts","addCarts","item_id","savedCart","item","quantity","updateCarts","cart_id","put","deleteCarts","delete","orderAdd","params","order","getPosts","addPost","name","body","image","formData","FormData","append","deletePost","id"],"sources":["/Users/techi.s./Desktop/Cool-tees project backend/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\nconst LOGIN_USER_KEY = 'LOGIN_USER_KEY';\n\nvar baseURL;\n// if (\n//   process.env.REACT_APP_ENVIRONMENT &&\n//   process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n// ) {\n//   baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else\nbaseURL = \"https://backend-eric.herokuapp.com/\";\n\n\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\napi.interceptors.request.use(\n    config => {\n        if (localStorage.getItem(LOGIN_USER_KEY)) {\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n        }\n\n        return config;\n    },\n    err => {\n        console.error(err);\n    }\n);\n\nexport default class API {\n    //////////////////////////////\n    // USERS\n    /////////////////////////////\n\n    signUp = async (user_name, email, password) => {\n        const savedPost = await api\n            .post('/users/signup/', {\n                user_name: user_name,\n                email: email,\n                password: password\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    signIn = async (email, password) => {\n        const savedPost = await api\n            .post('/users/signin/', {\n                email: email,\n                password: password\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    getUsers = async () => {\n        const posts = await api\n            .get('/users/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return posts;\n    };\n\n    // ///////////////////////////////////////\n    // Items\n    // ///////////////////////////////////////\n\n    getItems = async () => {\n        let url = '/items/';\n        const items = await api\n            .get(url)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return items;\n    };\n\n    // ///////////////////////////////////////\n    // Carts\n    // //////////////////////////////////////\n\n    getCarts = async () => {\n        const carts = await api\n            .get('/carts/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return carts;\n    };\n\n    addCarts = async item_id => {\n        const savedCart = await api\n            .post('/carts/add/', {\n                item: item_id,\n                quantity: 1\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedCart;\n    };\n\n    updateCarts = async (cart_id, quantity) => {\n        const savedCart = await api\n            .put('/carts/update/' + cart_id + '/', {\n                quantity: quantity\n            })\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedCart;\n    };\n\n    deleteCarts = async cart_id => {\n        const response = await api\n            .delete('/carts/delete/' + cart_id + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return response;\n    };\n\n    ////////////////////////////////////////////\n    // Order/Checkout\n    // ////////////////////////////////////////\n\n    orderAdd = async (params = {}) => {\n        const order = await api\n            .post('/orders/add/', params)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return order;\n    };\n\n    ///////////////////////////////////////////\n    // Reference Post\n    //////////////////////////////////////////\n\n    getPosts = async () => {\n        const posts = await api\n            .get('/posts/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return posts;\n    };\n\n    addPost = async (name, body, image) => {\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('body', body);\n        formData.append('image', image);\n        const savedPost = await api\n            .post('/posts/add/', formData)\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return savedPost;\n    };\n\n    deletePost = async id => {\n        const response = await api\n            .delete('/posts/delete/' + id + '/')\n            .then(response => {\n                return response.data;\n            })\n            .catch(error => {\n                throw new Error(error);\n            });\n        return response;\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}